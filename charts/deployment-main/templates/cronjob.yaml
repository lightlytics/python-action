{{- range $cronjob_name, $cron_job_values := .Values.cronjob }}
apiVersion: batch/v1beta1
kind: CronJob
metadata:
  name: {{ $cronjob_name }}
spec:
  schedule: {{ $cron_job_values.schedule | quote }}
  jobTemplate:
    spec:
      template:
        spec:
        {{- if $cron_job_values.serviceAccount }}
          serviceAccountName: {{ $cron_job_values.serviceAccount.serviceAccountName }}
        {{- end }}
          containers:
            - name: {{ $cronjob_name }}
              image: {{ template "ecrUrl" $}}/{{ $cron_job_values.imageName }}:{{ $.Values.deployment.branchName }}.{{ $.Values.deployment.buildNumber }}
              imagePullPolicy: Always
              args:
                {{- range $cron_job_values.command }}
                - {{ . }}
                {{- end }}
              env:
              {{- range $envVarName, $envVarValue := $.Values.deployment.env }}
                - name: {{ $envVarName }}
                  value: {{ $envVarValue | quote }}
                {{- end }}
                - name: RELEASE_NAME
                  value: {{ $.Release.Name }}
              {{- range $key, $value := $cron_job_values.env }}
                - name: {{ $key }}
                  value: {{ $value | quote }}
              {{- end }}
                {{/* todo: move the needed values to a temp var and iterate over it, insread of range twice */}}
                {{- if eq $.Release.Name "staging"}}
              {{- range $envVarName, $envVarValue := $.Values.deployment.stagingEnvVars }}
                - name: {{ $envVarName }}
                  value: {{ $envVarValue | quote }}
              {{- end }}
                {{- else if and (ne $.Release.Name "prodcution") (ne $.Release.Name "prod") (ne $.Release.Name "stage") (ne $.Release.Name "staging") }}
              {{- range $envVarName, $envVarValue := $.Values.deployment.demoEnvVars }}
                - name: {{ $envVarName }}
                  value: {{ $envVarValue | quote }}
              {{- end }}
              {{- end }}
            {{- range $key, $value := $.Values.secrets }}
                - name: {{ $key }}
                  valueFrom:
                    secretKeyRef:
                      name: {{ $value.secret_name }}
                      key: {{ $value.secret_key }}
            {{- end }}
            {{- if $cron_job_values.volumeMounts }}
              volumeMounts:
              {{- range $key, $value := $cron_job_values.volumeMounts }}
              - mountPath: {{ $value.mountPath }}
                name: {{ $key }}
                readOnly: true
              {{- end }}
              {{- end }}
          restartPolicy: Never
        {{- if $cron_job_values.volumeMounts }}
          volumes:
          {{- range $key, $value := $cron_job_values.volumeMounts }}
          - name: {{ $key }}
            projected:
              defaultMode: 420
              sources:
                - serviceAccountToken:
                    audience: sts.amazonaws.com
                    expirationSeconds: 86400
                    path: token
          {{- end }}
        {{- end }}
---
{{- end }}