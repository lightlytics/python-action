{{- range $ms_name, $ms_values := .Values.lightlytics_ms }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ $ms_name }}
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ $ms_name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ $ms_name }}
        tags.datadoghq.com/env: {{ $.Release.Name }}
        tags.datadoghq.com/service: {{ $ms_name }}
        tags.datadoghq.com/version: {{ $.Values.deployment.branchName }}.{{ default $.Values.deployment.buildNumber $ms_values.deployment.relase }}
    spec:
      {{-  if $ms_values.serviceAccount }}
      serviceAccountName: {{ $ms_values.serviceAccount.serviceAccountName }}
      {{- end }}
      containers:
      - name: {{ $ms_name }}
        image: {{ template "ecrUrl" $}}/{{ default $ms_name $ms_values.imageName  }}:{{ $.Values.deployment.branchName }}.{{ default $.Values.deployment.buildNumber $ms_values.deployment.relase }}
      {{- if $ms_values.deployment.startupProbe }}
        startupProbe:
          httpGet:
            path: {{ $ms_values.deployment.startupProbe.path }}
            port: {{ $ms_values.service.targetPort }}
          failureThreshold: {{ $ms_values.deployment.startupProbe.failureThreshold }}
          periodSeconds: {{ $ms_values.deployment.startupProbe.periodSeconds }}
        {{- end}}
        {{- if $ms_values.deployment.livenessProbe }}
        livenessProbe:
          httpGet:
            path: {{ $ms_values.deployment.livenessProbe.path }}
            port: {{ $ms_values.service.targetPort }}
          failureThreshold: {{ $ms_values.deployment.livenessProbe.failureThreshold }}
          periodSeconds: {{ $ms_values.deployment.livenessProbe.periodSeconds }}
        {{- end}}
        {{- if $ms_values.deployment.command }}
        command:
          - {{ $ms_values.deployment.command }}
        {{- end }}
        env:
          - name: DD_AGENT_HOST
            valueFrom:
              fieldRef:
                fieldPath: status.hostIP
          - name: DD_ENV
            valueFrom:
              fieldRef:
                fieldPath: metadata.labels['tags.datadoghq.com/env']
          - name: DD_SERVICE
            valueFrom:
              fieldRef:
                fieldPath: metadata.labels['tags.datadoghq.com/service']
          - name: DD_VERSION
            valueFrom:
              fieldRef:
                fieldPath: metadata.labels['tags.datadoghq.com/version']
          - name: DD_LOGS_INJECTION
            value: "true"
          {{- range $envVarName, $envVarValue := $.Values.deployment.env }}
          - name: {{ $envVarName }}
            value: {{ $envVarValue | quote }}
          {{- end }}
            {{/* todo: move the needed values to a temp var and iterate over it, insread of range twice */}}
            {{- if eq $.Release.Name "staging"}}
            {{- range $envVarName, $envVarValue := $.Values.deployment.stagingEnvVars }}
          - name: {{ $envVarName }}
            value: {{ $envVarValue | quote }}
            {{- end }}
            {{- else if and (ne $.Release.Name "prodcution") (ne $.Release.Name "prod") (ne $.Release.Name "stage") (ne $.Release.Name "staging") }}
            {{- range $envVarName, $envVarValue := $.Values.deployment.demoEnvVars }}
          - name: {{ $envVarName }}
            value: {{ $envVarValue | quote }}
            {{- end }}
          {{- end }}
          {{- range $key, $value := $ms_values.deployment.env }}
          - name: {{ $key }}
            value: {{ $value | quote }}
          {{- end }}
          - name: RELEASE_NAME
            value: {{ $.Release.Name }}
          {{- range $key, $value := $.Values.secrets }}
          - name: {{ $key }}
            valueFrom:
              secretKeyRef:
                name: {{ $value.secret_name }}
                key: {{ $value.secret_key }}
          {{- end }}
        {{- range $key, $value := $ms_values.deployment.secrets }}
          - name: {{ $key }}
            valueFrom:
              secretKeyRef:
                name: {{ $value.secret_name }}
                key: {{ $value.secret_key }}
        {{- end }}
        imagePullPolicy: {{ default $.Values.deployment.imagepullPolicy $ms_values.deployment.imagepullPolicy }}
        ports:
        {{- if $ms_values.service }}
        - containerPort: {{ $ms_values.service.targetPort }}
        {{- end }}
        resources:
          limits:
            cpu: {{ if $ms_values.deployment.resources }}{{ $ms_values.deployment.resources.limits.cpu }} {{- else -}} {{ $.Values.deployment.resources.limits.cpu }} {{- end }}
            memory: {{ if $ms_values.deployment.resources }}{{ $ms_values.deployment.resources.limits.memory }} {{- else -}} {{ $.Values.deployment.resources.limits.memory }} {{- end }}
          requests:
            cpu: {{ if $ms_values.deployment.resources }}{{ $ms_values.deployment.resources.requests.cpu }} {{- else -}} {{ $.Values.deployment.resources.requests.cpu }} {{- end }}
            memory: {{ if $ms_values.deployment.resources }}{{ $ms_values.deployment.resources.requests.memory }} {{- else -}} {{ $.Values.deployment.resources.requests.memory }} {{- end }}
        {{- if $ms_values.deployment.volumeMounts }}
        volumeMounts:
        {{- range $key, $value := $ms_values.deployment.volumeMounts }}
        - mountPath: {{ $value.mountPath }}
          name: {{ $key }}
          readOnly: true
        {{- end }}
        {{- end }}
      {{- if $ms_values.deployment.volumeMounts }}
      volumes:
      {{- range $key, $value := $ms_values.deployment.volumeMounts }}
      - name: {{ $key }}
        projected:
          defaultMode: 420
          sources:
            - serviceAccountToken:
                audience: sts.amazonaws.com
                expirationSeconds: 86400
                path: token
      {{- end }}
      {{- end }}
---
{{- end }}
