# THIS IS CONFIGURED FOR FUTURE USE WITH ANOTHER INGRESS CONTROLLER, ALB INGRESS CONTROLLER DOESNT SUPPORT IT
apiVersion: cert-manager.io/v1
kind: ClusterIssuer
metadata:
  name: letsencrypt-issuer-dev
spec:
  acme:
    server: https://acme-v02.api.letsencrypt.org/directory
    # You must replace this email address with your own.
    # Let's Encrypt will use this to contact you about expiring
    # certificates, and issues related to your account.
    email: devops@lightlytics.com
    # The ACME Issuer type represents a single account registered with the Automated Certificate Management Environment
    # (ACME) Certificate Authority server. When you create a new ACME Issuer, cert-manager will generate a private key
    # which is used to identify you with the ACME server.
    # Secret resource that will be used to store the account's private key.
    privateKeySecretRef:
      name: letsencrypt-account-key-dev
    solvers:
      # DNS01 challenges are completed by providing a computed key that is present at a DNS TXT record.
      # Once this TXT record has been propagated across the internet, the ACME server can successfully retrieve this
      # key via a DNS lookup and can validate that the client owns the domain for the requested certificate.
      # With the correct permissions, cert-manager will automatically present this TXT record for your given DNS provider.
      # https://cert-manager.io/docs/configuration/acme/dns01/
      - dns01:
          # https://cert-manager.io/docs/configuration/acme/dns01/route53/
          route53:
            hostedZoneID: Z02219341U89YM65K8R5R
            region: us-east-1
#            IF YOU ARE USING SERVICE ACCOUNTS IN YOUR CLUSTER DONT PUT 'role' IN HERE EVER (WILL CAUSE ALL HELL TO BREAK LOOSE)
#        selector:
#          dnsZones:
#            - "lightops.io"


